{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/enderkalem/si_app%20copy/app/page.js"],"sourcesContent":["\"use client\"\nimport { useState, useEffect, useRef } from \"react\"\nimport { CompassFill, GeoAltFill, PersonFill } from \"react-bootstrap-icons\"\nimport { initializeApp, getApps, getApp } from 'firebase/app'\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging'\nimport logo from \"./assets/Cartoon.PNG\"\nimport \"./App.css\"\nimport Auth from \"./Auth\"\nimport { supabase } from \"./supabaseClient\"\nimport MembershipCard from \"./MembershipCard\"\nimport BusinessForm from \"./BusinessForm\"\nimport BusinessProfile from \"./BusinessProfile\"\nimport LandingPage from \"./LandingPage\"\nimport StatenIslandMap from \"./StatenIslandMap\"\nimport ProfileAndPayment from \"./ProfileAndPayment\"\n\n// Firebase configuration - REPLACE WITH YOUR CONFIG\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC5NjB_yv61XLqCOazv8WVDooBVDmvQWC8\",\n  authDomain: \"si-app-be948.firebaseapp.com\",\n  projectId: \"si-app-be948\",\n  storageBucket: \"si-app-be948.firebasestorage.app\",\n  messagingSenderId: \"959224695369\",\n  appId: \"1:959224695369:web:96fd41e33c3c60b201cd98\",\n  measurementId: \"G-GK9X2XXJ9P\"\n};\n\nconst navItems = [\n  { label: \"Highlighted Business\", icon: CompassFill },\n  { label: \"Map\", icon: GeoAltFill },\n  { label: \"Display My Card\", icon: PersonFill },\n  { label: \"Profile and Payment\", icon: PersonFill },\n]\n\n// OPTIMIZED IMAGE COMPONENT - LOADS ALL AT ONCE\nfunction OptimizedImage({ src, alt, className, onClick }) {\n  const [isLoading, setIsLoading] = useState(true)\n\n  return (\n    <div style={{ position: 'relative', overflow: 'hidden', borderRadius: '8px' }}>\n      <img\n        src={src}\n        alt={alt}\n        className={className}\n        onClick={onClick}\n        onLoad={() => setIsLoading(false)}\n        style={{ \n          opacity: isLoading ? 0.7 : 1,\n          transition: 'opacity 0.3s ease-in-out',\n          backgroundColor: '#f0f0f0'\n        }}\n      />\n    </div>\n  )\n}\n\n// Add this function in your App.js component, near your other upload functions\n\n// Function to compress images (reuse your existing compressAndUploadImage or create this)\nasync function compressImage(file) {\n  return new Promise((resolve) => {\n    const reader = new FileReader()\n    reader.onload = (e) => {\n      const img = new Image()\n      img.onload = () => {\n        const canvas = document.createElement('canvas')\n        const ctx = canvas.getContext('2d')\n        \n        let width = img.width\n        let height = img.height\n        const maxWidth = 1200\n        const maxHeight = 1200\n\n        if (width > height) {\n          if (width > maxWidth) {\n            height *= maxWidth / width\n            width = maxWidth\n          }\n        } else {\n          if (height > maxHeight) {\n            width *= maxHeight / height\n            height = maxHeight\n          }\n        }\n\n        canvas.width = width\n        canvas.height = height\n        ctx.drawImage(img, 0, 0, width, height)\n\n        canvas.toBlob(\n          (blob) => resolve(blob),\n          'image/jpeg',\n          0.85\n        )\n      }\n      img.src = e.target.result\n    }\n    reader.readAsDataURL(file)\n  })\n}\n\n// Add this function to handle multiple photo uploads\nconst uploadBusinessPhotos = async (businessId, files) => {\n  if (!files || files.length === 0) return []\n  \n  try {\n    console.log('Starting photo upload for business ID:', businessId)\n    \n    // Verify business exists\n    const { data: existingBusiness, error: checkError } = await supabase\n      .from('businesses')\n      .select('id, name, photo_urls')\n      .eq('id', businessId)\n      .maybeSingle()\n    \n    if (!existingBusiness) {\n      console.error('Business not found')\n      alert('Error: Business not found')\n      return []\n    }\n    \n    const uploadedUrls = []\n    \n    // Upload each file\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i]\n      console.log(`Compressing photo ${i + 1}/${files.length}...`)\n      \n      // Compress image\n      const compressedBlob = await compressImage(file)\n      const compressedFile = new File([compressedBlob], file.name, { type: 'image/jpeg' })\n      \n      const fileExt = 'jpg'\n      const fileName = `${businessId}-${Date.now()}-${i}.${fileExt}`\n      const filePath = fileName\n      \n      console.log(`Uploading photo ${i + 1}/${files.length} to business-logos bucket:`, filePath)\n      \n      // Upload to Supabase Storage\n      const { error: uploadError, data: uploadData } = await supabase.storage\n        .from('business-logos')\n        .upload(filePath, compressedFile, { \n          upsert: true,\n          cacheControl: '31536000'\n        })\n      \n      if (uploadError) {\n        console.error(`Upload error for photo ${i + 1}:`, uploadError)\n        continue // Skip this photo and continue with others\n      }\n      \n      console.log(`Upload ${i + 1} successful:`, uploadData)\n      \n      // Get public URL\n      const { data: urlData } = supabase.storage\n        .from('business-logos')\n        .getPublicUrl(filePath)\n      \n      if (urlData?.publicUrl) {\n        uploadedUrls.push(urlData.publicUrl)\n      }\n    }\n    \n    if (uploadedUrls.length === 0) {\n      alert('No photos were uploaded successfully')\n      return []\n    }\n    \n    // Update database with new photo URLs\n    const currentPhotos = existingBusiness.photo_urls || []\n    const updatedPhotos = [...currentPhotos, ...uploadedUrls]\n    \n    const { error: updateError, data: updatedBusiness } = await supabase\n      .from('businesses')\n      .update({ photo_urls: updatedPhotos })\n      .eq('id', businessId)\n      .select()\n    \n    if (updateError) {\n      console.error('Database update error:', updateError)\n      alert('Failed to update database: ' + updateError.message)\n      return []\n    }\n    \n    console.log('Database updated successfully with new photos')\n    alert(`${uploadedUrls.length} photo(s) uploaded successfully!`)\n    \n    return uploadedUrls\n  } catch (error) {\n    console.error('Error uploading photos:', error)\n    alert('Error: ' + error.message)\n    return []\n  }\n}\n\n// Update your BusinessProfile render to pass the required props:\n\n\n// IMAGE COMPRESSION UTILITY\nasync function compressAndUploadImage(file) {\n  return new Promise((resolve) => {\n    const reader = new FileReader()\n    reader.onload = (e) => {\n      const img = new Image()\n      img.onload = () => {\n        const canvas = document.createElement('canvas')\n        const ctx = canvas.getContext('2d')\n        \n        let width = img.width\n        let height = img.height\n        const maxWidth = 800\n        const maxHeight = 800\n\n        if (width > height) {\n          if (width > maxWidth) {\n            height *= maxWidth / width\n            width = maxWidth\n          }\n        } else {\n          if (height > maxHeight) {\n            width *= maxHeight / height\n            height = maxHeight\n          }\n        }\n\n        canvas.width = width\n        canvas.height = height\n        ctx.drawImage(img, 0, 0, width, height)\n\n        canvas.toBlob(\n          (blob) => resolve(blob),\n          'image/jpeg',\n          0.8\n        )\n      }\n      img.src = e.target.result\n    }\n    reader.readAsDataURL(file)\n  })\n}\n\nfunction App() {\n  const [showSplash, setShowSplash] = useState(true)\n  const [session, setSession] = useState(null)\n  const [selectedNav, setSelectedNav] = useState(navItems[0].label)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [businesses, setBusinesses] = useState([])\n  const [justSignedUp, setJustSignedUp] = useState(false)\n  const [selectedBusiness, setSelectedBusiness] = useState(null)\n  const [showLanding, setShowLanding] = useState(false)\n  const [zipSearch, setZipSearch] = useState(\"\")\n  const [isMobile, setIsMobile] = useState(false)\n  const [showRegister, setShowRegister] = useState(false)\n  const [shouldShake, setShouldShake] = useState(false)\n  const [showFilters, setShowFilters] = useState(false)\n  const [displayName, setDisplayName] = useState(\"\")\n  const [editingName, setEditingName] = useState(\"\")\n  const [avatarUrl, setAvatarUrl] = useState(\"\")\n  const [isSaving, setIsSaving] = useState(false)\n  const [saveStatus, setSaveStatus] = useState(null)\n  const [uploading, setUploading] = useState(false)\n  const [userFcmToken, setUserFcmToken] = useState(null)\n  const [selectedBusinessId, setSelectedBusinessId] = useState(null)\n  const [mapPanTo, setMapPanTo] = useState(null)\n  const [sortBy, setSortBy] = useState(\"\")\n  const [tags, setTags] = useState([])\n  const [newTag, setNewTag] = useState(\"\")\n  const [categoryFilter, setCategoryFilter] = useState(\"\")\n  const [zipFilter, setZipFilter] = useState(\"\")\n  const [tagFilter, setTagFilter] = useState(\"\")\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  // Initialize Firebase and get FCM token\n  useEffect(() => {\n    const initializeFirebase = async () => {\n      try {\n        let app;\n        if (getApps().length === 0) {\n          app = initializeApp(firebaseConfig)\n          console.log('Firebase app initialized')\n        } else {\n          app = getApp()\n          console.log('Firebase app already exists')\n        }\n        \n        const messaging = getMessaging(app)\n        \n        const permission = await Notification.requestPermission()\n        if (permission === 'granted') {\n          console.log('Notification permission granted')\n          \n          const token = await getToken(messaging, {\n            vapidKey: 'BOgqakg5aBxNszM1Ji6H4ADnNMtexhho5CWWpijJqNxdyD8MtYGSc7ZX3yRz2ybsVs8YIHKi_NZ0mz8zAQ25lQk'\n          })\n          \n          if (token) {\n            console.log('FCM Token:', token)\n            handleFcmTokenReceived(token)\n          } else {\n            console.log('No FCM token received')\n          }\n        } else {\n          console.log('Notification permission denied')\n        }\n        \n        onMessage(messaging, (payload) => {\n          console.log('Message received in foreground:', payload)\n          if (payload.notification) {\n            new Notification(payload.notification.title, {\n              body: payload.notification.body,\n              icon: payload.notification.icon\n            })\n          }\n        })\n      } catch (error) {\n        console.error('Error initializing Firebase messaging:', error)\n      }\n    }\n    \n    initializeFirebase()\n  }, [])\n\n  useEffect(() => {\n    if (session?.user?.email) {\n      const adminEmails = ['serkankalem99@gmail.com']\n      setIsAdmin(adminEmails.includes(session.user.email.toLowerCase()))\n    }\n  }, [session])\n\n  // ULTRA-OPTIMIZED IMAGE URL WITH TRANSFORMS & WEBP\n  const getBusinessImage = (business, size = 'small') => {\n    if (business.logo_url && \n        business.logo_url.trim() !== '' && \n        business.logo_url !== '/placeholder.svg' &&\n        !business.logo_url.includes('placeholder')) {\n      // Determine size parameters\n      const sizes = {\n        small: { width: 200, height: 200, quality: 75 },\n        medium: { width: 300, height: 300, quality: 80 },\n        large: { width: 500, height: 500, quality: 85 }\n      }\n      const sizeParams = sizes[size] || sizes.small\n      \n      // Add image transformation parameters with webp format and higher cache\n      return `${business.logo_url}?width=${sizeParams.width}&height=${sizeParams.height}&quality=${sizeParams.quality}&format=webp`\n    }\n    return '/placeholder.svg'\n  }\n\n  // OPTIMIZED UPLOAD WITH COMPRESSION\n  const uploadBusinessLogo = async (businessId, file) => {\n    if (!file) return null\n    \n    try {\n      console.log('Starting upload for business ID:', businessId)\n      console.log('Business ID type:', typeof businessId)\n      \n      const { data: existingBusiness, error: checkError } = await supabase\n        .from('businesses')\n        .select('id, name')\n        .eq('id', businessId)\n        .maybeSingle()\n      \n      console.log('Business lookup result:', existingBusiness)\n      console.log('Business lookup error:', checkError)\n      \n      if (!existingBusiness) {\n        console.error('Business not found in database with ID:', businessId)\n        alert('Error: Cannot find business in database. ID might be incorrect.')\n        return null\n      }\n      \n      // Compress image before uploading\n      console.log('Compressing image...')\n      const compressedBlob = await compressAndUploadImage(file)\n      const compressedFile = new File([compressedBlob], file.name, { type: 'image/jpeg' })\n      \n      const fileExt = 'jpg'\n      const fileName = `${businessId}-${Date.now()}.${fileExt}`\n      const filePath = fileName\n      \n      console.log('Uploading to business-logos bucket:', filePath)\n      \n      const { error: uploadError, data: uploadData } = await supabase.storage\n        .from('business-logos')\n        .upload(filePath, compressedFile, { \n          upsert: true,\n          cacheControl: '31536000' // Cache for 1 year\n        })\n      \n      if (uploadError) {\n        console.error('Upload error:', uploadError)\n        alert('Upload failed: ' + uploadError.message)\n        return null\n      }\n      \n      console.log('Upload successful:', uploadData)\n      \n      const { data: urlData } = supabase.storage\n        .from('business-logos')\n        .getPublicUrl(filePath)\n      \n      if (!urlData?.publicUrl) {\n        console.error('Failed to get public URL')\n        return null\n      }\n      \n      console.log('Public URL:', urlData.publicUrl)\n      \n      const { error: updateError, data: updatedBusiness } = await supabase\n        .from('businesses')\n        .update({ logo_url: urlData.publicUrl })\n        .eq('id', businessId)\n        .select()\n      \n      if (updateError) {\n        console.error('Database update error:', updateError)\n        alert('Failed to update database: ' + updateError.message)\n        return null\n      }\n      \n      console.log('Database updated successfully:', updatedBusiness)\n      \n      if (!updatedBusiness || updatedBusiness.length === 0) {\n        console.error('No business found with ID:', businessId)\n        alert('Error: Business not found in database')\n        return null\n      }\n      \n      alert('Logo uploaded successfully!')\n      \n      return urlData.publicUrl\n    } catch (error) {\n      console.error('Error uploading logo:', error)\n      alert('Error: ' + error.message)\n      return null\n    }\n  }\n\n  const handleLogoUpload = async (businessId, file) => {\n    if (!file) return\n    \n    setBusinesses(prev => prev.map(biz => \n      biz.id === businessId ? { ...biz, uploading: true } : biz\n    ))\n    \n    const logoUrl = await uploadBusinessLogo(businessId, file)\n    \n    if (logoUrl) {\n      setBusinesses(prev => prev.map(biz => \n        biz.id === businessId ? { ...biz, logo_url: logoUrl, uploading: false } : biz\n      ))\n      await fetchBusinesses()\n    } else {\n      setBusinesses(prev => prev.map(biz => \n        biz.id === businessId ? { ...biz, uploading: false } : biz\n      ))\n    }\n  }\n\n  const handleNavClick = (label) => {\n    if (label === \"Display My Card\") {\n      setShouldShake(true)\n      setTimeout(() => setShouldShake(false), 600)\n    }\n    setSelectedNav(label)\n  }\n\n  const handleBusinessSelect = (e) => {\n    const businessId = e.target.value\n    setSelectedBusinessId(businessId)\n    const business = businesses.find((biz) => biz.id === businessId)\n    if (business && business.latitude && business.longitude) {\n      setMapPanTo({\n        lat: Number.parseFloat(business.latitude),\n        lng: Number.parseFloat(business.longitude)\n      })\n    }\n  }\n\n  const handleFcmTokenReceived = (token) => {\n    console.log('FCM token received and set:', token)\n    setUserFcmToken(token)\n  }\n\n  const handleAddBusiness = async (newBusiness) => {\n    setBusinesses((prev) => [newBusiness, ...prev])\n    setSelectedNav(\"Highlighted Business\")\n    notifyNewBusiness(newBusiness, userFcmToken)\n  }\n\n  async function notifyNewBusiness(newBusiness, userFcmToken) {\n    if (!userFcmToken) {\n      console.warn('No FCM token available for notifications')\n      return\n    }\n    try {\n      console.log('Sending notification with token:', userFcmToken)\n      const response = await fetch(\"/api/send-notification\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          fcmToken: userFcmToken,\n          title: \"New Business Added!\",\n          body: `${newBusiness.name} just joined our app!`,\n        }),\n      })\n      if (!response.ok) {\n        const errorText = await response.text()\n        console.error(`Notification send failed: ${response.status}`, errorText)\n        return\n      }\n      const data = await response.json()\n      console.log(\"Notification sent successfully:\", data)\n    } catch (error) {\n      console.error(\"Error sending notification:\", error)\n    }\n  }\n\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768 || /Mobi|Android/i.test(navigator.userAgent))\n    }\n    checkMobile()\n    window.addEventListener(\"resize\", checkMobile)\n    return () => window.removeEventListener(\"resize\", checkMobile)\n  }, [])\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowSplash(false)\n      setShowLanding(true)\n    }, 2000)\n    return () => clearTimeout(timer)\n  }, [])\n\n  useEffect(() => {\n    supabase.auth.getSession().then(({ data: { session } }) => setSession(session))\n    const { data } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session)\n    })\n    return () => {\n      if (data?.subscription?.unsubscribe) {\n        data.subscription.unsubscribe()\n      }\n    }\n  }, [])\n\n  // OPTIMIZED FETCH - PARALLEL LOADING WITH CACHING\n  const fetchBusinesses = async () => {\n    console.log('Fetching businesses from database...')\n    const { data, error } = await supabase\n      .from(\"businesses\")\n      .select(\"*\")\n      .order(\"created_at\", { ascending: false })\n      \n\n    if (!error && data) {\n      console.log('Fetched businesses:', data.length)\n      setBusinesses(data)\n      // Preload images in parallel for faster rendering\n      preloadImages(data)\n    } else if (error) {\n      console.error('Error fetching businesses:', error)\n    }\n  }\n\n  // Preload all images in parallel\n  const preloadImages = (businessList) => {\n    businessList.forEach(business => {\n      const img = new Image()\n      img.src = getBusinessImage(business, 'small')\n    })\n  }\n\n  useEffect(() => {\n    fetchBusinesses()\n  }, [])\n\n  useEffect(() => {\n    if (session?.user) {\n      const metadata = session.user.user_metadata || {}\n      setDisplayName(metadata.display_name || \"\")\n      setEditingName(metadata.display_name || \"\")\n      setAvatarUrl(metadata.avatar_url || \"\")\n    }\n  }, [session])\n\n  const saveName = async () => {\n    setIsSaving(true)\n    setSaveStatus(null)\n    const { data, error } = await supabase.auth.updateUser({\n      data: {\n        display_name: editingName,\n        avatar_url: avatarUrl,\n      },\n    })\n    if (!error && data?.user) {\n      setDisplayName(editingName)\n      setSession((prev) => ({ ...prev, user: data.user }))\n      setSaveStatus(\"success\")\n    } else {\n      setSaveStatus(\"error\")\n    }\n    setIsSaving(false)\n  }\n\n  const handleFileUpload = async (e) => {\n    const file = e.target.files[0]\n    if (!file || !session?.user?.id) return\n    setUploading(true)\n    const fileExt = file.name.split(\".\").pop()\n    const filePath = `avatars/${session.user.id}-${Date.now()}.${fileExt}`\n    const { error: uploadError } = await supabase.storage\n      .from(\"avatars\")\n      .upload(filePath, file, { upsert: true })\n    if (uploadError) {\n      setUploading(false)\n      setSaveStatus(\"error\")\n      return\n    }\n    const { data: urlData } = supabase.storage.from(\"avatars\").getPublicUrl(filePath)\n    const publicUrl = urlData?.publicUrl || \"\"\n    if (!publicUrl) {\n      setUploading(false)\n      setSaveStatus(\"error\")\n      return\n    }\n    const { error: metaErr, data: updated } = await supabase.auth.updateUser({\n      data: {\n        display_name: editingName || displayName,\n        avatar_url: publicUrl,\n      },\n    })\n    if (!metaErr && updated?.user) {\n      setAvatarUrl(publicUrl)\n      setSession((prev) => ({ ...prev, user: updated.user }))\n      setSaveStatus(\"success\")\n    } else {\n      setSaveStatus(\"error\")\n    }\n    setUploading(false)\n  }\n\n  const handleLogout = async () => {\n    const { error } = await supabase.auth.signOut()\n    if (!error) {\n      setSession(null)\n      setDisplayName(\"\")\n      setEditingName(\"\")\n      setAvatarUrl(\"\")\n      setSelectedNav(navItems[0].label)\n    }\n  }\n\n  if (showSplash) {\n    return (\n      <div className=\"splash-screen\">\n        <div className=\"sparkle sparkle-1\">✦</div>\n        <div className=\"sparkle sparkle-2\">✧</div>\n        <div className=\"sparkle sparkle-3\">✦</div>\n        <div className=\"decorative-circle\"></div>\n        <div className=\"logo-container\">\n          <img src={logo || \"/placeholder.svg\"} alt=\"App logo\" className=\"splash-logo\" />\n        </div>\n        <div className=\"splash-tagline\"></div>\n      </div>\n    )\n  }\n\n  if (showLanding && !session) {\n    return (\n      <LandingPage\n        onLoginClick={() => {\n          setShowLanding(false)\n          setShowRegister(false)\n        }}\n        onGetStarted={() => {\n          setShowLanding(false)\n          setShowRegister(true)\n        }}\n      />\n    )\n  }\n\n  if (!session) {\n    return (\n      <Auth\n        onAuthSuccess={(_data, isSignUp) => {\n          supabase.auth.getSession().then(({ data: { session } }) => {\n            setSession(session)\n            if (isSignUp) setJustSignedUp(true)\n          })\n        }}\n        isLoginProp={!showRegister}\n      />\n    )\n  }\n\n  if (justSignedUp) {\n    return (\n      <div style={{ width: \"100vw\", margin: 0, padding: 16, boxSizing: \"border-box\" }}>\n        <h2>Welcome to Staten Island!</h2>\n        <MembershipCard\n          email={session.user.email}\n          name={displayName}\n          avatar={avatarUrl}\n          style={{ width: \"100%\", maxWidth: \"100%\" }}\n        />\n        <button\n          onClick={() => setJustSignedUp(false)}\n          style={{\n            marginTop: 24,\n            padding: \"12px 24px\",\n            backgroundColor: \"#007acc\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: 8,\n            fontWeight: \"600\",\n            cursor: \"pointer\",\n            transition: \"background 0.3s\",\n            width: \"100%\",\n            maxWidth: 400,\n            display: \"block\",\n          }}\n          onMouseEnter={(e) => (e.target.style.backgroundColor = \"#005fa3\")}\n          onMouseLeave={(e) => (e.target.style.backgroundColor = \"#007acc\")}\n        >\n          Continue to App\n        </button>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <style>\n        {`\n          @keyframes pulse {\n            0%, 100% { opacity: 0.6; }\n            50% { opacity: 1; }\n          }\n        `}\n      </style>\n      <div style={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\" }}>\n      <main style={{ flex: 1, padding: 0, overflowY: \"auto\" }}>\n  {selectedNav === \"Display My Card\" ? (\n    <div\n      style={{\n        padding: \"40px 20px\",\n        margin: 0,\n        width: \"100vw\",\n        minHeight: \"calc(100vh - 60px)\",\n        backgroundColor: \"#ffffff\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        textAlign: \"center\",\n        boxSizing: \"border-box\",\n      }}\n    >\n      <MembershipCard\n        email={session.user.email}\n        name={displayName}\n        avatar={avatarUrl}\n        shouldShake={shouldShake}\n        style={{ width: \"100%\", maxWidth: 400, margin: \"0 auto\" }}\n      />\n    </div>\n  ) : selectedNav === \"Add Your Business\" ? (\n    <BusinessForm onAddBusiness={handleAddBusiness} />\n  ) : selectedNav === \"Map\" ? (\n    <div style={{ height: \"100vh\", display: \"flex\", flexDirection: \"column\" }}>\n      <div style={{ flexGrow: 1 }}>\n        <StatenIslandMap businesses={businesses} />\n      </div>\n    </div>\n  ) : selectedNav === \"Profile and Payment\" ? (\n    <div className=\"profile-page-backdrop\">\n      <ProfileAndPayment\n        session={session}\n        displayName={displayName}\n        onSaveName={saveName}\n        editingName={editingName}\n        setEditingName={setEditingName}\n        isSaving={isSaving}\n        saveStatus={saveStatus}\n        onLogout={handleLogout}\n      />\n    </div>\n  ) : selectedNav === \"Highlighted Business\" ? (\n    <div>\n      <div className=\"highlighted-business-container\">\n        <div className=\"highlighted-business-header\">\n          <h2>Hello, {displayName || \"Guest\"}!</h2>\n        </div>\n        <div className=\"highlighted-search-container\">\n          <span>🔍</span>\n          <input\n            type=\"text\"\n            placeholder=\"Search businesses...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"highlighted-filter-bar\">\n        <div className=\"filter-controls-row\">\n          <select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>\n            <option value=\"\">Sort By</option>\n            <option value=\"az\">A → Z</option>\n            <option value=\"za\">Z → A</option>\n            <option value=\"oldest\">Oldest → Newest</option>\n            <option value=\"newest\">Newest → Oldest</option>\n            <option value=\"rating\">Highest Rating</option>\n          </select>\n          <select value={zipSearch} onChange={(e) => setZipSearch(e.target.value)}>\n            <option value=\"\">📍 Search by Zip</option>\n            {[...new Set(businesses.map((biz) => biz.zip_code))].map(\n              (zip, idx) =>\n                zip && (\n                  <option key={idx} value={zip}>\n                    {zip}\n                  </option>\n                )\n            )}\n          </select>\n          <div className=\"highlighted-tag-input\">\n            <input\n              type=\"text\"\n              placeholder=\" 🏷️ Add tag...\"\n              value={newTag}\n              onChange={(e) => setNewTag(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\" && newTag.trim()) {\n                  setTags([...tags, newTag.trim()])\n                  setNewTag(\"\")\n                }\n              }}\n            />\n          </div>\n        </div>\n        {tags.length > 0 && (\n          <div className=\"highlighted-tags-list\">\n            {tags.map((tag, idx) => (\n              <span key={idx}>\n                {tag}\n                <button onClick={() => setTags(tags.filter((_, i) => i !== idx))}>✕</button>\n              </span>\n            ))}\n          </div>\n        )}\n      </div>\n      {businesses\n        .filter((biz) => {\n          const matchesSearch =\n            (biz.name || \"\").toLowerCase().includes(searchTerm.toLowerCase()) ||\n            (biz.description || \"\").toLowerCase().includes(searchTerm.toLowerCase())\n\n          const matchesTag =\n            tags.length === 0 ||\n            (Array.isArray(biz.tags) &&\n              tags.some((t) =>\n                biz.tags.some((tag) => tag.toLowerCase() === t.toLowerCase())\n              ))\n\n          const matchesZip =\n            !zipSearch ||\n            (biz.zip_code && biz.zip_code.toString().startsWith(zipSearch.trim()))\n\n          return matchesSearch && matchesTag && matchesZip\n        })\n        .sort((a, b) => {\n          if (sortBy === \"az\") return a.name.localeCompare(b.name)\n          if (sortBy === \"za\") return b.name.localeCompare(a.name)\n          if (sortBy === \"oldest\") return a.id - b.id\n          if (sortBy === \"newest\") return b.id - a.id\n          if (sortBy === \"rating\") return (b.rating || 0) - (a.rating || 0)\n          return 0\n        })\n        .map((biz) => (\n          <div \n            key={biz.id} \n            className=\"highlighted-business-card\"\n            onClick={() => setSelectedBusiness(biz)}\n            style={{ cursor: \"pointer\" }}\n          >\n            <div style={{ position: \"relative\" }}>\n              {biz.uploading && (\n                <div\n                  style={{\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    backgroundColor: \"rgba(255,255,255,0.8)\",\n                    borderRadius: \"8px\",\n                    zIndex: 10,\n                  }}\n                >\n                  <div>Uploading...</div>\n                </div>\n              )}\n              <OptimizedImage\n                src={getBusinessImage(biz)}\n                alt={biz.name}\n                className=\"highlighted-business-logo\"\n                onClick={(e) => {\n                  e.stopPropagation()\n                  setSelectedBusiness(biz)\n                }}\n              />\n              {isAdmin && (\n                <label\n                  style={{\n                    position: \"absolute\",\n                    bottom: -8,\n                    right: -8,\n                    backgroundColor: \"#1e3a8a\",\n                    color: \"white\",\n                    borderRadius: \"50%\",\n                    width: 28,\n                    height: 28,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    cursor: \"pointer\",\n                    fontSize: \"14px\",\n                    boxShadow: \"0 2px 6px rgba(0,0,0,0.2)\",\n                  }}\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  📷\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    style={{ display: \"none\" }}\n                    onChange={(e) => {\n                      if (e.target.files?.[0]) {\n                        handleLogoUpload(biz.id, e.target.files[0])\n                      }\n                    }}\n                  />\n                </label>\n              )}\n            </div>\n\n            <div className=\"highlighted-business-content\">\n              <div className=\"highlighted-business-name\">{biz.name}</div>\n              {biz.description && (\n                <div className=\"highlighted-business-description\">\n                  {biz.description}\n                </div>\n              )}\n\n              {/* ⭐ INTERACTIVE RATING SECTION ⭐ */}\n              <div \n                style={{ display: \"flex\", alignItems: \"center\", gap: 4 }}\n                onClick={(e) => e.stopPropagation()}\n              >\n                {[1, 2, 3, 4, 5].map((star) => (\n                  <span\n                    key={star}\n                    onClick={async (e) => {\n                      e.stopPropagation()\n                      if (!session?.user) {\n                        alert(\"Please sign in to rate this business.\")\n                        return\n                      }\n                      try {\n                        const { error: insertError } = await supabase\n                          .from(\"reviews\")\n                          .insert({\n                            business_id: biz.id,\n                            user_id: session.user.id,\n                            rating: star,\n                          })\n                        if (insertError) throw insertError\n\n                        const { data: allReviews, error: fetchError } = await supabase\n                          .from(\"reviews\")\n                          .select(\"rating\")\n                          .eq(\"business_id\", biz.id)\n\n                        if (fetchError) throw fetchError\n\n                        const total = allReviews.length\n                        const avg =\n                          total > 0\n                            ? allReviews.reduce((a, r) => a + r.rating, 0) / total\n                            : 0\n\n                        const { error: updateError } = await supabase\n                          .from(\"businesses\")\n                          .update({\n                            rating: avg.toFixed(1),\n                            review_count: total,\n                          })\n                          .eq(\"id\", biz.id)\n\n                        if (updateError) throw updateError\n\n                        // Update local state instantly\n                        setBusinesses((prev) =>\n                          prev.map((b) =>\n                            b.id === biz.id\n                              ? { ...b, rating: avg.toFixed(1), review_count: total }\n                              : b\n                          )\n                        )\n                      } catch (err) {\n                        console.error(\"Rating error:\", err)\n                        alert(\"Error submitting your rating.\")\n                      }\n                    }}\n                    style={{\n                      color: (biz.rating || 0) >= star ? \"#f59e0b\" : \"#ccc\",\n                      fontSize: 18,\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    ★\n                  </span>\n                ))}\n                <span style={{ fontSize: 13, color: \"#f59e0b\", fontWeight: 500 }}>\n                  {biz.rating || \" 0.0\"} ({biz.review_count || 0})\n                </span>\n              </div>\n\n              {/* 🏷️ TAGS SECTION - RESTORED */}\n              {Array.isArray(biz.tags) && biz.tags.length > 0 && (\n                <div className=\"highlighted-business-tags\">\n                  <span className=\"highlighted-tag-pill\">\n                    <span>🏷️</span>\n                    <span>{biz.tags[0]}</span>\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n    </div>\n  ) : (\n    <div>{/* Any other routes */}</div>\n  )}\n</main>\n        {selectedBusiness && (\n  <BusinessProfile \n    business={selectedBusiness} \n    onClose={() => setSelectedBusiness(null)}\n    isAdmin={isAdmin}\n    onPhotosUpdate={uploadBusinessPhotos}\n  />\n)}\n        <nav\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            backgroundColor: \"#darkblue\",\n            padding: \"8px 4px\",\n            borderTop: \"1px solid #ccc\",\n            minHeight: \"60px\",\n          }}\n        >\n          {navItems.map(({ label, icon: Icon }) => {\n            const isSelected = selectedNav === label\n            const shortLabel =\n              label === \"Highlighted Business\"\n                ? \"Businesses \"\n                : label === \"Display My Card\"\n                ? \"My Card\"\n                : label === \"Profile and Payment\"\n                ? \"Profile\"\n                : label\n            return (\n              <div\n                key={label}\n                onClick={() => handleNavClick(label)}\n                style={{\n                  cursor: \"pointer\",\n                  padding: \"4px 2px\",\n                  borderRadius: 6,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  color: isSelected ? \"darkblue\" : \"#666\",\n                  fontWeight: isSelected ? \"bold\" : \"normal\",\n                  transition: \"color 0.3s\",\n                  flex: 1,\n                  maxWidth: \"80px\",\n                }}\n              >\n                <Icon size={20} color={isSelected ? \"darkblue\" : \"#666\"} />\n                <span\n                  style={{\n                    fontSize: \"10px\",\n                    marginTop: 2,\n                    textAlign: \"center\",\n                    lineHeight: \"12px\",\n                    whiteSpace: \"nowrap\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                    maxWidth: \"100%\",\n                  }}\n                >\n                  {shortLabel}\n                </span>\n              </div>\n            )\n          })}\n        </nav>\n      </div>\n    </div>\n  )\n}\n\nexport default App"],"names":[],"mappings":";;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAJA;;;;;;;;;;;;;;;;AAgBA,oDAAoD;AACpD,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,MAAM,WAAW;IACf;QAAE,OAAO;QAAwB,MAAM,wPAAW;IAAC;IACnD;QAAE,OAAO;QAAO,MAAM,yPAAU;IAAC;IACjC;QAAE,OAAO;QAAmB,MAAM,qPAAU;IAAC;IAC7C;QAAE,OAAO;QAAuB,MAAM,qPAAU;IAAC;CAClD;AAED,gDAAgD;AAChD,SAAS,eAAe,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE;IACtD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iOAAQ,EAAC;IAE3C,qBACE,8PAAC;QAAI,OAAO;YAAE,UAAU;YAAY,UAAU;YAAU,cAAc;QAAM;kBAC1E,cAAA,8PAAC;YACC,KAAK;YACL,KAAK;YACL,WAAW;YACX,SAAS;YACT,QAAQ,IAAM,aAAa;YAC3B,OAAO;gBACL,SAAS,YAAY,MAAM;gBAC3B,YAAY;gBACZ,iBAAiB;YACnB;;;;;;;;;;;AAIR;AAEA,+EAA+E;AAE/E,0FAA0F;AAC1F,eAAe,cAAc,IAAI;IAC/B,OAAO,IAAI,QAAQ,CAAC;QAClB,MAAM,SAAS,IAAI;QACnB,OAAO,MAAM,GAAG,CAAC;YACf,MAAM,MAAM,IAAI;YAChB,IAAI,MAAM,GAAG;gBACX,MAAM,SAAS,SAAS,aAAa,CAAC;gBACtC,MAAM,MAAM,OAAO,UAAU,CAAC;gBAE9B,IAAI,QAAQ,IAAI,KAAK;gBACrB,IAAI,SAAS,IAAI,MAAM;gBACvB,MAAM,WAAW;gBACjB,MAAM,YAAY;gBAElB,IAAI,QAAQ,QAAQ;oBAClB,IAAI,QAAQ,UAAU;wBACpB,UAAU,WAAW;wBACrB,QAAQ;oBACV;gBACF,OAAO;oBACL,IAAI,SAAS,WAAW;wBACtB,SAAS,YAAY;wBACrB,SAAS;oBACX;gBACF;gBAEA,OAAO,KAAK,GAAG;gBACf,OAAO,MAAM,GAAG;gBAChB,IAAI,SAAS,CAAC,KAAK,GAAG,GAAG,OAAO;gBAEhC,OAAO,MAAM,CACX,CAAC,OAAS,QAAQ,OAClB,cACA;YAEJ;YACA,IAAI,GAAG,GAAG,EAAE,MAAM,CAAC,MAAM;QAC3B;QACA,OAAO,aAAa,CAAC;IACvB;AACF;AAEA,qDAAqD;AACrD,MAAM,uBAAuB,OAAO,YAAY;IAC9C,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG,OAAO,EAAE;IAE3C,IAAI;QACF,QAAQ,GAAG,CAAC,0CAA0C;QAEtD,yBAAyB;QACzB,MAAM,EAAE,MAAM,gBAAgB,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM,SACzD,IAAI,CAAC,cACL,MAAM,CAAC,wBACP,EAAE,CAAC,MAAM,YACT,WAAW;QAEd,IAAI,CAAC,kBAAkB;YACrB,QAAQ,KAAK,CAAC;YACd,MAAM;YACN,OAAO,EAAE;QACX;QAEA,MAAM,eAAe,EAAE;QAEvB,mBAAmB;QACnB,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,MAAM,OAAO,KAAK,CAAC,EAAE;YACrB,QAAQ,GAAG,CAAC,CAAC,kBAAkB,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,MAAM,CAAC,GAAG,CAAC;YAE3D,iBAAiB;YACjB,MAAM,iBAAiB,MAAM,cAAc;YAC3C,MAAM,iBAAiB,IAAI,KAAK;gBAAC;aAAe,EAAE,KAAK,IAAI,EAAE;gBAAE,MAAM;YAAa;YAElF,MAAM,UAAU;YAChB,MAAM,WAAW,GAAG,WAAW,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,SAAS;YAC9D,MAAM,WAAW;YAEjB,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,MAAM,CAAC,0BAA0B,CAAC,EAAE;YAElF,6BAA6B;YAC7B,MAAM,EAAE,OAAO,WAAW,EAAE,MAAM,UAAU,EAAE,GAAG,MAAM,SAAS,OAAO,CACpE,IAAI,CAAC,kBACL,MAAM,CAAC,UAAU,gBAAgB;gBAChC,QAAQ;gBACR,cAAc;YAChB;YAEF,IAAI,aAAa;gBACf,QAAQ,KAAK,CAAC,CAAC,uBAAuB,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE;gBAClD,UAAS,2CAA2C;YACtD;YAEA,QAAQ,GAAG,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC,EAAE;YAE3C,iBAAiB;YACjB,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,SAAS,OAAO,CACvC,IAAI,CAAC,kBACL,YAAY,CAAC;YAEhB,IAAI,SAAS,WAAW;gBACtB,aAAa,IAAI,CAAC,QAAQ,SAAS;YACrC;QACF;QAEA,IAAI,aAAa,MAAM,KAAK,GAAG;YAC7B,MAAM;YACN,OAAO,EAAE;QACX;QAEA,sCAAsC;QACtC,MAAM,gBAAgB,iBAAiB,UAAU,IAAI,EAAE;QACvD,MAAM,gBAAgB;eAAI;eAAkB;SAAa;QAEzD,MAAM,EAAE,OAAO,WAAW,EAAE,MAAM,eAAe,EAAE,GAAG,MAAM,SACzD,IAAI,CAAC,cACL,MAAM,CAAC;YAAE,YAAY;QAAc,GACnC,EAAE,CAAC,MAAM,YACT,MAAM;QAET,IAAI,aAAa;YACf,QAAQ,KAAK,CAAC,0BAA0B;YACxC,MAAM,gCAAgC,YAAY,OAAO;YACzD,OAAO,EAAE;QACX;QAEA,QAAQ,GAAG,CAAC;QACZ,MAAM,GAAG,aAAa,MAAM,CAAC,gCAAgC,CAAC;QAE9D,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,MAAM,YAAY,MAAM,OAAO;QAC/B,OAAO,EAAE;IACX;AACF;AAEA,iEAAiE;AAGjE,4BAA4B;AAC5B,eAAe,uBAAuB,IAAI;IACxC,OAAO,IAAI,QAAQ,CAAC;QAClB,MAAM,SAAS,IAAI;QACnB,OAAO,MAAM,GAAG,CAAC;YACf,MAAM,MAAM,IAAI;YAChB,IAAI,MAAM,GAAG;gBACX,MAAM,SAAS,SAAS,aAAa,CAAC;gBACtC,MAAM,MAAM,OAAO,UAAU,CAAC;gBAE9B,IAAI,QAAQ,IAAI,KAAK;gBACrB,IAAI,SAAS,IAAI,MAAM;gBACvB,MAAM,WAAW;gBACjB,MAAM,YAAY;gBAElB,IAAI,QAAQ,QAAQ;oBAClB,IAAI,QAAQ,UAAU;wBACpB,UAAU,WAAW;wBACrB,QAAQ;oBACV;gBACF,OAAO;oBACL,IAAI,SAAS,WAAW;wBACtB,SAAS,YAAY;wBACrB,SAAS;oBACX;gBACF;gBAEA,OAAO,KAAK,GAAG;gBACf,OAAO,MAAM,GAAG;gBAChB,IAAI,SAAS,CAAC,KAAK,GAAG,GAAG,OAAO;gBAEhC,OAAO,MAAM,CACX,CAAC,OAAS,QAAQ,OAClB,cACA;YAEJ;YACA,IAAI,GAAG,GAAG,EAAE,MAAM,CAAC,MAAM;QAC3B;QACA,OAAO,aAAa,CAAC;IACvB;AACF;AAEA,SAAS;IACP,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iOAAQ,EAAC;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iOAAQ,EAAC;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iOAAQ,EAAC,QAAQ,CAAC,EAAE,CAAC,KAAK;IAChE,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iOAAQ,EAAC;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iOAAQ,EAAC,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iOAAQ,EAAC;IACjD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iOAAQ,EAAC;IACzD,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iOAAQ,EAAC;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iOAAQ,EAAC;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iOAAQ,EAAC;IACzC,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iOAAQ,EAAC;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iOAAQ,EAAC;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iOAAQ,EAAC;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iOAAQ,EAAC;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iOAAQ,EAAC;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iOAAQ,EAAC;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iOAAQ,EAAC;IACzC,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iOAAQ,EAAC;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iOAAQ,EAAC;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iOAAQ,EAAC;IACjD,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,IAAA,iOAAQ,EAAC;IAC7D,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iOAAQ,EAAC;IACzC,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iOAAQ,EAAC;IACrC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iOAAQ,EAAC,EAAE;IACnC,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iOAAQ,EAAC;IACrC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,iOAAQ,EAAC;IACrD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iOAAQ,EAAC;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iOAAQ,EAAC;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iOAAQ,EAAC;IAEvC,wCAAwC;IACxC,IAAA,kOAAS,EAAC;QACR,MAAM,qBAAqB;YACzB,IAAI;gBACF,IAAI;gBACJ,IAAI,IAAA,2LAAO,IAAG,MAAM,KAAK,GAAG;oBAC1B,MAAM,IAAA,iMAAa,EAAC;oBACpB,QAAQ,GAAG,CAAC;gBACd,OAAO;oBACL,MAAM,IAAA,0LAAM;oBACZ,QAAQ,GAAG,CAAC;gBACd;gBAEA,MAAM,YAAY,IAAA,sMAAY,EAAC;gBAE/B,MAAM,aAAa,MAAM,aAAa,iBAAiB;gBACvD,IAAI,eAAe,WAAW;oBAC5B,QAAQ,GAAG,CAAC;oBAEZ,MAAM,QAAQ,MAAM,IAAA,kMAAQ,EAAC,WAAW;wBACtC,UAAU;oBACZ;oBAEA,IAAI,OAAO;wBACT,QAAQ,GAAG,CAAC,cAAc;wBAC1B,uBAAuB;oBACzB,OAAO;wBACL,QAAQ,GAAG,CAAC;oBACd;gBACF,OAAO;oBACL,QAAQ,GAAG,CAAC;gBACd;gBAEA,IAAA,mMAAS,EAAC,WAAW,CAAC;oBACpB,QAAQ,GAAG,CAAC,mCAAmC;oBAC/C,IAAI,QAAQ,YAAY,EAAE;wBACxB,IAAI,aAAa,QAAQ,YAAY,CAAC,KAAK,EAAE;4BAC3C,MAAM,QAAQ,YAAY,CAAC,IAAI;4BAC/B,MAAM,QAAQ,YAAY,CAAC,IAAI;wBACjC;oBACF;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,0CAA0C;YAC1D;QACF;QAEA;IACF,GAAG,EAAE;IAEL,IAAA,kOAAS,EAAC;QACR,IAAI,SAAS,MAAM,OAAO;YACxB,MAAM,cAAc;gBAAC;aAA0B;YAC/C,WAAW,YAAY,QAAQ,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,WAAW;QAChE;IACF,GAAG;QAAC;KAAQ;IAEZ,mDAAmD;IACnD,MAAM,mBAAmB,CAAC,UAAU,OAAO,OAAO;QAChD,IAAI,SAAS,QAAQ,IACjB,SAAS,QAAQ,CAAC,IAAI,OAAO,MAC7B,SAAS,QAAQ,KAAK,sBACtB,CAAC,SAAS,QAAQ,CAAC,QAAQ,CAAC,gBAAgB;YAC9C,4BAA4B;YAC5B,MAAM,QAAQ;gBACZ,OAAO;oBAAE,OAAO;oBAAK,QAAQ;oBAAK,SAAS;gBAAG;gBAC9C,QAAQ;oBAAE,OAAO;oBAAK,QAAQ;oBAAK,SAAS;gBAAG;gBAC/C,OAAO;oBAAE,OAAO;oBAAK,QAAQ;oBAAK,SAAS;gBAAG;YAChD;YACA,MAAM,aAAa,KAAK,CAAC,KAAK,IAAI,MAAM,KAAK;YAE7C,wEAAwE;YACxE,OAAO,GAAG,SAAS,QAAQ,CAAC,OAAO,EAAE,WAAW,KAAK,CAAC,QAAQ,EAAE,WAAW,MAAM,CAAC,SAAS,EAAE,WAAW,OAAO,CAAC,YAAY,CAAC;QAC/H;QACA,OAAO;IACT;IAEA,oCAAoC;IACpC,MAAM,qBAAqB,OAAO,YAAY;QAC5C,IAAI,CAAC,MAAM,OAAO;QAElB,IAAI;YACF,QAAQ,GAAG,CAAC,oCAAoC;YAChD,QAAQ,GAAG,CAAC,qBAAqB,OAAO;YAExC,MAAM,EAAE,MAAM,gBAAgB,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM,SACzD,IAAI,CAAC,cACL,MAAM,CAAC,YACP,EAAE,CAAC,MAAM,YACT,WAAW;YAEd,QAAQ,GAAG,CAAC,2BAA2B;YACvC,QAAQ,GAAG,CAAC,0BAA0B;YAEtC,IAAI,CAAC,kBAAkB;gBACrB,QAAQ,KAAK,CAAC,2CAA2C;gBACzD,MAAM;gBACN,OAAO;YACT;YAEA,kCAAkC;YAClC,QAAQ,GAAG,CAAC;YACZ,MAAM,iBAAiB,MAAM,uBAAuB;YACpD,MAAM,iBAAiB,IAAI,KAAK;gBAAC;aAAe,EAAE,KAAK,IAAI,EAAE;gBAAE,MAAM;YAAa;YAElF,MAAM,UAAU;YAChB,MAAM,WAAW,GAAG,WAAW,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,SAAS;YACzD,MAAM,WAAW;YAEjB,QAAQ,GAAG,CAAC,uCAAuC;YAEnD,MAAM,EAAE,OAAO,WAAW,EAAE,MAAM,UAAU,EAAE,GAAG,MAAM,SAAS,OAAO,CACpE,IAAI,CAAC,kBACL,MAAM,CAAC,UAAU,gBAAgB;gBAChC,QAAQ;gBACR,cAAc,WAAW,mBAAmB;YAC9C;YAEF,IAAI,aAAa;gBACf,QAAQ,KAAK,CAAC,iBAAiB;gBAC/B,MAAM,oBAAoB,YAAY,OAAO;gBAC7C,OAAO;YACT;YAEA,QAAQ,GAAG,CAAC,sBAAsB;YAElC,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,SAAS,OAAO,CACvC,IAAI,CAAC,kBACL,YAAY,CAAC;YAEhB,IAAI,CAAC,SAAS,WAAW;gBACvB,QAAQ,KAAK,CAAC;gBACd,OAAO;YACT;YAEA,QAAQ,GAAG,CAAC,eAAe,QAAQ,SAAS;YAE5C,MAAM,EAAE,OAAO,WAAW,EAAE,MAAM,eAAe,EAAE,GAAG,MAAM,SACzD,IAAI,CAAC,cACL,MAAM,CAAC;gBAAE,UAAU,QAAQ,SAAS;YAAC,GACrC,EAAE,CAAC,MAAM,YACT,MAAM;YAET,IAAI,aAAa;gBACf,QAAQ,KAAK,CAAC,0BAA0B;gBACxC,MAAM,gCAAgC,YAAY,OAAO;gBACzD,OAAO;YACT;YAEA,QAAQ,GAAG,CAAC,kCAAkC;YAE9C,IAAI,CAAC,mBAAmB,gBAAgB,MAAM,KAAK,GAAG;gBACpD,QAAQ,KAAK,CAAC,8BAA8B;gBAC5C,MAAM;gBACN,OAAO;YACT;YAEA,MAAM;YAEN,OAAO,QAAQ,SAAS;QAC1B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,MAAM,YAAY,MAAM,OAAO;YAC/B,OAAO;QACT;IACF;IAEA,MAAM,mBAAmB,OAAO,YAAY;QAC1C,IAAI,CAAC,MAAM;QAEX,cAAc,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,MAC7B,IAAI,EAAE,KAAK,aAAa;oBAAE,GAAG,GAAG;oBAAE,WAAW;gBAAK,IAAI;QAGxD,MAAM,UAAU,MAAM,mBAAmB,YAAY;QAErD,IAAI,SAAS;YACX,cAAc,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,MAC7B,IAAI,EAAE,KAAK,aAAa;wBAAE,GAAG,GAAG;wBAAE,UAAU;wBAAS,WAAW;oBAAM,IAAI;YAE5E,MAAM;QACR,OAAO;YACL,cAAc,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,MAC7B,IAAI,EAAE,KAAK,aAAa;wBAAE,GAAG,GAAG;wBAAE,WAAW;oBAAM,IAAI;QAE3D;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,UAAU,mBAAmB;YAC/B,eAAe;YACf,WAAW,IAAM,eAAe,QAAQ;QAC1C;QACA,eAAe;IACjB;IAEA,MAAM,uBAAuB,CAAC;QAC5B,MAAM,aAAa,EAAE,MAAM,CAAC,KAAK;QACjC,sBAAsB;QACtB,MAAM,WAAW,WAAW,IAAI,CAAC,CAAC,MAAQ,IAAI,EAAE,KAAK;QACrD,IAAI,YAAY,SAAS,QAAQ,IAAI,SAAS,SAAS,EAAE;YACvD,YAAY;gBACV,KAAK,OAAO,UAAU,CAAC,SAAS,QAAQ;gBACxC,KAAK,OAAO,UAAU,CAAC,SAAS,SAAS;YAC3C;QACF;IACF;IAEA,MAAM,yBAAyB,CAAC;QAC9B,QAAQ,GAAG,CAAC,+BAA+B;QAC3C,gBAAgB;IAClB;IAEA,MAAM,oBAAoB,OAAO;QAC/B,cAAc,CAAC,OAAS;gBAAC;mBAAgB;aAAK;QAC9C,eAAe;QACf,kBAAkB,aAAa;IACjC;IAEA,eAAe,kBAAkB,WAAW,EAAE,YAAY;QACxD,IAAI,CAAC,cAAc;YACjB,QAAQ,IAAI,CAAC;YACb;QACF;QACA,IAAI;YACF,QAAQ,GAAG,CAAC,oCAAoC;YAChD,MAAM,WAAW,MAAM,MAAM,0BAA0B;gBACrD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBACnB,UAAU;oBACV,OAAO;oBACP,MAAM,GAAG,YAAY,IAAI,CAAC,qBAAqB,CAAC;gBAClD;YACF;YACA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,QAAQ,KAAK,CAAC,CAAC,0BAA0B,EAAE,SAAS,MAAM,EAAE,EAAE;gBAC9D;YACF;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,mCAAmC;QACjD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;QAC/C;IACF;IAEA,IAAA,kOAAS,EAAC;QACR,MAAM,cAAc;YAClB,YAAY,OAAO,UAAU,GAAG,OAAO,gBAAgB,IAAI,CAAC,UAAU,SAAS;QACjF;QACA;QACA,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG,EAAE;IAEL,IAAA,kOAAS,EAAC;QACR,MAAM,QAAQ,WAAW;YACvB,cAAc;YACd,eAAe;QACjB,GAAG;QACH,OAAO,IAAM,aAAa;IAC5B,GAAG,EAAE;IAEL,IAAA,kOAAS,EAAC;QACR,SAAS,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAK,WAAW;QACtE,MAAM,EAAE,IAAI,EAAE,GAAG,SAAS,IAAI,CAAC,iBAAiB,CAAC,CAAC,QAAQ;YACxD,WAAW;QACb;QACA,OAAO;YACL,IAAI,MAAM,cAAc,aAAa;gBACnC,KAAK,YAAY,CAAC,WAAW;YAC/B;QACF;IACF,GAAG,EAAE;IAEL,kDAAkD;IAClD,MAAM,kBAAkB;QACtB,QAAQ,GAAG,CAAC;QACZ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,cACL,MAAM,CAAC,KACP,KAAK,CAAC,cAAc;YAAE,WAAW;QAAM;QAG1C,IAAI,CAAC,SAAS,MAAM;YAClB,QAAQ,GAAG,CAAC,uBAAuB,KAAK,MAAM;YAC9C,cAAc;YACd,kDAAkD;YAClD,cAAc;QAChB,OAAO,IAAI,OAAO;YAChB,QAAQ,KAAK,CAAC,8BAA8B;QAC9C;IACF;IAEA,iCAAiC;IACjC,MAAM,gBAAgB,CAAC;QACrB,aAAa,OAAO,CAAC,CAAA;YACnB,MAAM,MAAM,IAAI;YAChB,IAAI,GAAG,GAAG,iBAAiB,UAAU;QACvC;IACF;IAEA,IAAA,kOAAS,EAAC;QACR;IACF,GAAG,EAAE;IAEL,IAAA,kOAAS,EAAC;QACR,IAAI,SAAS,MAAM;YACjB,MAAM,WAAW,QAAQ,IAAI,CAAC,aAAa,IAAI,CAAC;YAChD,eAAe,SAAS,YAAY,IAAI;YACxC,eAAe,SAAS,YAAY,IAAI;YACxC,aAAa,SAAS,UAAU,IAAI;QACtC;IACF,GAAG;QAAC;KAAQ;IAEZ,MAAM,WAAW;QACf,YAAY;QACZ,cAAc;QACd,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU,CAAC;YACrD,MAAM;gBACJ,cAAc;gBACd,YAAY;YACd;QACF;QACA,IAAI,CAAC,SAAS,MAAM,MAAM;YACxB,eAAe;YACf,WAAW,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,MAAM,KAAK,IAAI;gBAAC,CAAC;YAClD,cAAc;QAChB,OAAO;YACL,cAAc;QAChB;QACA,YAAY;IACd;IAEA,MAAM,mBAAmB,OAAO;QAC9B,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE;QAC9B,IAAI,CAAC,QAAQ,CAAC,SAAS,MAAM,IAAI;QACjC,aAAa;QACb,MAAM,UAAU,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG;QACxC,MAAM,WAAW,CAAC,QAAQ,EAAE,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,SAAS;QACtE,MAAM,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,SAAS,OAAO,CAClD,IAAI,CAAC,WACL,MAAM,CAAC,UAAU,MAAM;YAAE,QAAQ;QAAK;QACzC,IAAI,aAAa;YACf,aAAa;YACb,cAAc;YACd;QACF;QACA,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,SAAS,OAAO,CAAC,IAAI,CAAC,WAAW,YAAY,CAAC;QACxE,MAAM,YAAY,SAAS,aAAa;QACxC,IAAI,CAAC,WAAW;YACd,aAAa;YACb,cAAc;YACd;QACF;QACA,MAAM,EAAE,OAAO,OAAO,EAAE,MAAM,OAAO,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU,CAAC;YACvE,MAAM;gBACJ,cAAc,eAAe;gBAC7B,YAAY;YACd;QACF;QACA,IAAI,CAAC,WAAW,SAAS,MAAM;YAC7B,aAAa;YACb,WAAW,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,MAAM,QAAQ,IAAI;gBAAC,CAAC;YACrD,cAAc;QAChB,OAAO;YACL,cAAc;QAChB;QACA,aAAa;IACf;IAEA,MAAM,eAAe;QACnB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAC7C,IAAI,CAAC,OAAO;YACV,WAAW;YACX,eAAe;YACf,eAAe;YACf,aAAa;YACb,eAAe,QAAQ,CAAC,EAAE,CAAC,KAAK;QAClC;IACF;IAEA,IAAI,YAAY;QACd,qBACE,8PAAC;YAAI,WAAU;;8BACb,8PAAC;oBAAI,WAAU;8BAAoB;;;;;;8BACnC,8PAAC;oBAAI,WAAU;8BAAoB;;;;;;8BACnC,8PAAC;oBAAI,WAAU;8BAAoB;;;;;;8BACnC,8PAAC;oBAAI,WAAU;;;;;;8BACf,8PAAC;oBAAI,WAAU;8BACb,cAAA,8PAAC;wBAAI,KAAK,QAAQ;wBAAoB,KAAI;wBAAW,WAAU;;;;;;;;;;;8BAEjE,8PAAC;oBAAI,WAAU;;;;;;;;;;;;IAGrB;IAEA,IAAI,eAAe,CAAC,SAAS;QAC3B,qBACE,8PAAC;YACC,cAAc;gBACZ,eAAe;gBACf,gBAAgB;YAClB;YACA,cAAc;gBACZ,eAAe;gBACf,gBAAgB;YAClB;;;;;;IAGN;IAEA,IAAI,CAAC,SAAS;QACZ,qBACE,8PAAC;YACC,eAAe,CAAC,OAAO;gBACrB,SAAS,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE;oBACpD,WAAW;oBACX,IAAI,UAAU,gBAAgB;gBAChC;YACF;YACA,aAAa,CAAC;;;;;;IAGpB;IAEA,IAAI,cAAc;QAChB,qBACE,8PAAC;YAAI,OAAO;gBAAE,OAAO;gBAAS,QAAQ;gBAAG,SAAS;gBAAI,WAAW;YAAa;;8BAC5E,8PAAC;8BAAG;;;;;;8BACJ,8PAAC;oBACC,OAAO,QAAQ,IAAI,CAAC,KAAK;oBACzB,MAAM;oBACN,QAAQ;oBACR,OAAO;wBAAE,OAAO;wBAAQ,UAAU;oBAAO;;;;;;8BAE3C,8PAAC;oBACC,SAAS,IAAM,gBAAgB;oBAC/B,OAAO;wBACL,WAAW;wBACX,SAAS;wBACT,iBAAiB;wBACjB,OAAO;wBACP,QAAQ;wBACR,cAAc;wBACd,YAAY;wBACZ,QAAQ;wBACR,YAAY;wBACZ,OAAO;wBACP,UAAU;wBACV,SAAS;oBACX;oBACA,cAAc,CAAC,IAAO,EAAE,MAAM,CAAC,KAAK,CAAC,eAAe,GAAG;oBACvD,cAAc,CAAC,IAAO,EAAE,MAAM,CAAC,KAAK,CAAC,eAAe,GAAG;8BACxD;;;;;;;;;;;;IAKP;IAEA,qBACE,8PAAC;;0BACC,8PAAC;0BACE,CAAC;;;;;QAKF,CAAC;;;;;;0BAEH,8PAAC;gBAAI,OAAO;oBAAE,SAAS;oBAAQ,eAAe;oBAAU,QAAQ;gBAAQ;;kCACxE,8PAAC;wBAAK,OAAO;4BAAE,MAAM;4BAAG,SAAS;4BAAG,WAAW;wBAAO;kCACzD,gBAAgB,kCACf,8PAAC;4BACC,OAAO;gCACL,SAAS;gCACT,QAAQ;gCACR,OAAO;gCACP,WAAW;gCACX,iBAAiB;gCACjB,SAAS;gCACT,eAAe;gCACf,YAAY;gCACZ,gBAAgB;gCAChB,WAAW;gCACX,WAAW;4BACb;sCAEA,cAAA,8PAAC;gCACC,OAAO,QAAQ,IAAI,CAAC,KAAK;gCACzB,MAAM;gCACN,QAAQ;gCACR,aAAa;gCACb,OAAO;oCAAE,OAAO;oCAAQ,UAAU;oCAAK,QAAQ;gCAAS;;;;;;;;;;mCAG1D,gBAAgB,oCAClB,8PAAC;4BAAa,eAAe;;;;;mCAC3B,gBAAgB,sBAClB,8PAAC;4BAAI,OAAO;gCAAE,QAAQ;gCAAS,SAAS;gCAAQ,eAAe;4BAAS;sCACtE,cAAA,8PAAC;gCAAI,OAAO;oCAAE,UAAU;gCAAE;0CACxB,cAAA,8PAAC;oCAAgB,YAAY;;;;;;;;;;;;;;;mCAG/B,gBAAgB,sCAClB,8PAAC;4BAAI,WAAU;sCACb,cAAA,8PAAC;gCACC,SAAS;gCACT,aAAa;gCACb,YAAY;gCACZ,aAAa;gCACb,gBAAgB;gCAChB,UAAU;gCACV,YAAY;gCACZ,UAAU;;;;;;;;;;mCAGZ,gBAAgB,uCAClB,8PAAC;;8CACC,8PAAC;oCAAI,WAAU;;sDACb,8PAAC;4CAAI,WAAU;sDACb,cAAA,8PAAC;;oDAAG;oDAAQ,eAAe;oDAAQ;;;;;;;;;;;;sDAErC,8PAAC;4CAAI,WAAU;;8DACb,8PAAC;8DAAK;;;;;;8DACN,8PAAC;oDACC,MAAK;oDACL,aAAY;oDACZ,OAAO;oDACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;8CAInD,8PAAC;oCAAI,WAAU;;sDACb,8PAAC;4CAAI,WAAU;;8DACb,8PAAC;oDAAO,OAAO;oDAAQ,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;;sEAC9D,8PAAC;4DAAO,OAAM;sEAAG;;;;;;sEACjB,8PAAC;4DAAO,OAAM;sEAAK;;;;;;sEACnB,8PAAC;4DAAO,OAAM;sEAAK;;;;;;sEACnB,8PAAC;4DAAO,OAAM;sEAAS;;;;;;sEACvB,8PAAC;4DAAO,OAAM;sEAAS;;;;;;sEACvB,8PAAC;4DAAO,OAAM;sEAAS;;;;;;;;;;;;8DAEzB,8PAAC;oDAAO,OAAO;oDAAW,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;;sEACpE,8PAAC;4DAAO,OAAM;sEAAG;;;;;;wDAChB;+DAAI,IAAI,IAAI,WAAW,GAAG,CAAC,CAAC,MAAQ,IAAI,QAAQ;yDAAG,CAAC,GAAG,CACtD,CAAC,KAAK,MACJ,qBACE,8PAAC;gEAAiB,OAAO;0EACtB;+DADU;;;;;;;;;;;8DAMrB,8PAAC;oDAAI,WAAU;8DACb,cAAA,8PAAC;wDACC,MAAK;wDACL,aAAY;wDACZ,OAAO;wDACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;wDACzC,WAAW,CAAC;4DACV,IAAI,EAAE,GAAG,KAAK,WAAW,OAAO,IAAI,IAAI;gEACtC,QAAQ;uEAAI;oEAAM,OAAO,IAAI;iEAAG;gEAChC,UAAU;4DACZ;wDACF;;;;;;;;;;;;;;;;;wCAIL,KAAK,MAAM,GAAG,mBACb,8PAAC;4CAAI,WAAU;sDACZ,KAAK,GAAG,CAAC,CAAC,KAAK,oBACd,8PAAC;;wDACE;sEACD,8PAAC;4DAAO,SAAS,IAAM,QAAQ,KAAK,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;sEAAO;;;;;;;mDAFzD;;;;;;;;;;;;;;;;gCAQlB,WACE,MAAM,CAAC,CAAC;oCACP,MAAM,gBACJ,CAAC,IAAI,IAAI,IAAI,EAAE,EAAE,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OAC9D,CAAC,IAAI,WAAW,IAAI,EAAE,EAAE,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW;oCAEvE,MAAM,aACJ,KAAK,MAAM,KAAK,KACf,MAAM,OAAO,CAAC,IAAI,IAAI,KACrB,KAAK,IAAI,CAAC,CAAC,IACT,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,MAAQ,IAAI,WAAW,OAAO,EAAE,WAAW;oCAGhE,MAAM,aACJ,CAAC,aACA,IAAI,QAAQ,IAAI,IAAI,QAAQ,CAAC,QAAQ,GAAG,UAAU,CAAC,UAAU,IAAI;oCAEpE,OAAO,iBAAiB,cAAc;gCACxC,GACC,IAAI,CAAC,CAAC,GAAG;oCACR,IAAI,WAAW,MAAM,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI;oCACvD,IAAI,WAAW,MAAM,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI;oCACvD,IAAI,WAAW,UAAU,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE;oCAC3C,IAAI,WAAW,UAAU,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE;oCAC3C,IAAI,WAAW,UAAU,OAAO,CAAC,EAAE,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,IAAI,CAAC;oCAChE,OAAO;gCACT,GACC,GAAG,CAAC,CAAC,oBACJ,8PAAC;wCAEC,WAAU;wCACV,SAAS,IAAM,oBAAoB;wCACnC,OAAO;4CAAE,QAAQ;wCAAU;;0DAE3B,8PAAC;gDAAI,OAAO;oDAAE,UAAU;gDAAW;;oDAChC,IAAI,SAAS,kBACZ,8PAAC;wDACC,OAAO;4DACL,UAAU;4DACV,KAAK;4DACL,MAAM;4DACN,OAAO;4DACP,QAAQ;4DACR,SAAS;4DACT,YAAY;4DACZ,gBAAgB;4DAChB,iBAAiB;4DACjB,cAAc;4DACd,QAAQ;wDACV;kEAEA,cAAA,8PAAC;sEAAI;;;;;;;;;;;kEAGT,8PAAC;wDACC,KAAK,iBAAiB;wDACtB,KAAK,IAAI,IAAI;wDACb,WAAU;wDACV,SAAS,CAAC;4DACR,EAAE,eAAe;4DACjB,oBAAoB;wDACtB;;;;;;oDAED,yBACC,8PAAC;wDACC,OAAO;4DACL,UAAU;4DACV,QAAQ,CAAC;4DACT,OAAO,CAAC;4DACR,iBAAiB;4DACjB,OAAO;4DACP,cAAc;4DACd,OAAO;4DACP,QAAQ;4DACR,SAAS;4DACT,YAAY;4DACZ,gBAAgB;4DAChB,QAAQ;4DACR,UAAU;4DACV,WAAW;wDACb;wDACA,SAAS,CAAC,IAAM,EAAE,eAAe;;4DAClC;0EAEC,8PAAC;gEACC,MAAK;gEACL,QAAO;gEACP,OAAO;oEAAE,SAAS;gEAAO;gEACzB,UAAU,CAAC;oEACT,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;wEACvB,iBAAiB,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE;oEAC5C;gEACF;;;;;;;;;;;;;;;;;;0DAMR,8PAAC;gDAAI,WAAU;;kEACb,8PAAC;wDAAI,WAAU;kEAA6B,IAAI,IAAI;;;;;;oDACnD,IAAI,WAAW,kBACd,8PAAC;wDAAI,WAAU;kEACZ,IAAI,WAAW;;;;;;kEAKpB,8PAAC;wDACC,OAAO;4DAAE,SAAS;4DAAQ,YAAY;4DAAU,KAAK;wDAAE;wDACvD,SAAS,CAAC,IAAM,EAAE,eAAe;;4DAEhC;gEAAC;gEAAG;gEAAG;gEAAG;gEAAG;6DAAE,CAAC,GAAG,CAAC,CAAC,qBACpB,8PAAC;oEAEC,SAAS,OAAO;wEACd,EAAE,eAAe;wEACjB,IAAI,CAAC,SAAS,MAAM;4EAClB,MAAM;4EACN;wEACF;wEACA,IAAI;4EACF,MAAM,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,SAClC,IAAI,CAAC,WACL,MAAM,CAAC;gFACN,aAAa,IAAI,EAAE;gFACnB,SAAS,QAAQ,IAAI,CAAC,EAAE;gFACxB,QAAQ;4EACV;4EACF,IAAI,aAAa,MAAM;4EAEvB,MAAM,EAAE,MAAM,UAAU,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM,SACnD,IAAI,CAAC,WACL,MAAM,CAAC,UACP,EAAE,CAAC,eAAe,IAAI,EAAE;4EAE3B,IAAI,YAAY,MAAM;4EAEtB,MAAM,QAAQ,WAAW,MAAM;4EAC/B,MAAM,MACJ,QAAQ,IACJ,WAAW,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,EAAE,MAAM,EAAE,KAAK,QAC/C;4EAEN,MAAM,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,SAClC,IAAI,CAAC,cACL,MAAM,CAAC;gFACN,QAAQ,IAAI,OAAO,CAAC;gFACpB,cAAc;4EAChB,GACC,EAAE,CAAC,MAAM,IAAI,EAAE;4EAElB,IAAI,aAAa,MAAM;4EAEvB,+BAA+B;4EAC/B,cAAc,CAAC,OACb,KAAK,GAAG,CAAC,CAAC,IACR,EAAE,EAAE,KAAK,IAAI,EAAE,GACX;wFAAE,GAAG,CAAC;wFAAE,QAAQ,IAAI,OAAO,CAAC;wFAAI,cAAc;oFAAM,IACpD;wEAGV,EAAE,OAAO,KAAK;4EACZ,QAAQ,KAAK,CAAC,iBAAiB;4EAC/B,MAAM;wEACR;oEACF;oEACA,OAAO;wEACL,OAAO,CAAC,IAAI,MAAM,IAAI,CAAC,KAAK,OAAO,YAAY;wEAC/C,UAAU;wEACV,QAAQ;oEACV;8EACD;mEA1DM;;;;;0EA8DT,8PAAC;gEAAK,OAAO;oEAAE,UAAU;oEAAI,OAAO;oEAAW,YAAY;gEAAI;;oEAC5D,IAAI,MAAM,IAAI;oEAAO;oEAAG,IAAI,YAAY,IAAI;oEAAE;;;;;;;;;;;;;oDAKlD,MAAM,OAAO,CAAC,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG,mBAC5C,8PAAC;wDAAI,WAAU;kEACb,cAAA,8PAAC;4DAAK,WAAU;;8EACd,8PAAC;8EAAK;;;;;;8EACN,8PAAC;8EAAM,IAAI,IAAI,CAAC,EAAE;;;;;;;;;;;;;;;;;;;;;;;;uCA5JrB,IAAI,EAAE;;;;;;;;;;iDAqKnB,8PAAC;;;;;;;;;;oBAGI,kCACP,8PAAC;wBACC,UAAU;wBACV,SAAS,IAAM,oBAAoB;wBACnC,SAAS;wBACT,gBAAgB;;;;;;kCAGZ,8PAAC;wBACC,OAAO;4BACL,SAAS;4BACT,gBAAgB;4BAChB,iBAAiB;4BACjB,SAAS;4BACT,WAAW;4BACX,WAAW;wBACb;kCAEC,SAAS,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,IAAI,EAAE;4BAClC,MAAM,aAAa,gBAAgB;4BACnC,MAAM,aACJ,UAAU,yBACN,gBACA,UAAU,oBACV,YACA,UAAU,wBACV,YACA;4BACN,qBACE,8PAAC;gCAEC,SAAS,IAAM,eAAe;gCAC9B,OAAO;oCACL,QAAQ;oCACR,SAAS;oCACT,cAAc;oCACd,SAAS;oCACT,eAAe;oCACf,YAAY;oCACZ,gBAAgB;oCAChB,OAAO,aAAa,aAAa;oCACjC,YAAY,aAAa,SAAS;oCAClC,YAAY;oCACZ,MAAM;oCACN,UAAU;gCACZ;;kDAEA,8PAAC;wCAAK,MAAM;wCAAI,OAAO,aAAa,aAAa;;;;;;kDACjD,8PAAC;wCACC,OAAO;4CACL,UAAU;4CACV,WAAW;4CACX,WAAW;4CACX,YAAY;4CACZ,YAAY;4CACZ,UAAU;4CACV,cAAc;4CACd,UAAU;wCACZ;kDAEC;;;;;;;+BA9BE;;;;;wBAkCX;;;;;;;;;;;;;;;;;;AAKV;uCAEe","debugId":null}}]
}