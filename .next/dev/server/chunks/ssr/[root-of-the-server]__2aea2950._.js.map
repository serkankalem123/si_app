{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/enderkalem/si_app%20copy/src/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = 'https://beegwfvdcxwlxjrffrki.supabase.co';  // Replace with your URL\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJlZWd3ZnZkY3h3bHhqcmZmcmtpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI1OTkzNDYsImV4cCI6MjA2ODE3NTM0Nn0.Tz3XhM8ZCFUH_sHbdqVDCxBfvZVjKx7jDafQmtlzvo0';                  // Replace with your public key\n\nexport const supabase = createClient(supabaseUrl, supabaseKey);\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,cAAc,4CAA6C,wBAAwB;AACzF,MAAM,cAAc,oNAAqO,+BAA+B;AAEjR,MAAM,WAAW,IAAA,iKAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/enderkalem/si_app%20copy/pages/payment-success.js"],"sourcesContent":["// /pages/payment-success.js\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport { supabase } from \"../src/supabaseClient\";\n\nexport default function PaymentSuccess() {\n  const router = useRouter();\n  const [isRefreshing, setIsRefreshing] = useState(true);\n  const [retryCount, setRetryCount] = useState(0);\n  const MAX_RETRIES = 5;\n\n  useEffect(() => {\n    const refreshSessionAndCheck = async () => {\n      try {\n        console.log('üîÑ Refreshing session... Attempt:', retryCount + 1);\n        \n        // Refresh the session to get updated user metadata\n        const { data: { session }, error } = await supabase.auth.refreshSession();\n        \n        if (error) {\n          console.error('Error refreshing session:', error);\n          throw error;\n        }\n\n        console.log('Session refreshed:', session?.user?.user_metadata);\n        \n        // Check if premium status is updated\n        const isPremium = session?.user?.user_metadata?.is_premium;\n        \n        if (isPremium) {\n          console.log('‚úÖ Premium status confirmed!');\n          setIsRefreshing(false);\n          \n          // Redirect after 2 seconds with showCard parameter\n          setTimeout(() => {\n            router.push(\"/?showCard=true\");\n          }, 2000);\n        } else {\n          console.log('‚è≥ Premium status not yet updated, retrying...');\n          \n          // If not premium yet and haven't exceeded retries, try again\n          if (retryCount < MAX_RETRIES) {\n            setTimeout(() => {\n              setRetryCount(prev => prev + 1);\n            }, 2000);\n          } else {\n            console.log('‚ö†Ô∏è Max retries reached, redirecting anyway');\n            setIsRefreshing(false);\n            setTimeout(() => {\n              router.push(\"/?showCard=true\");\n            }, 2000);\n          }\n        }\n      } catch (error) {\n        console.error('Error in refresh process:', error);\n        setIsRefreshing(false);\n        \n        // Redirect anyway after error\n        setTimeout(() => {\n          router.push(\"/\");\n        }, 3000);\n      }\n    };\n\n    refreshSessionAndCheck();\n  }, [router, retryCount]);\n\n  return (\n    <div style={{ \n      textAlign: \"center\", \n      padding: 40,\n      minHeight: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }}>\n      <div style={{ fontSize: \"64px\", marginBottom: \"20px\" }}>\n        {isRefreshing ? \"üîÑ\" : \"‚úÖ\"}\n      </div>\n      <h1>Payment Successful!</h1>\n      <p>\n        {isRefreshing \n          ? \"Activating your premium features...\" \n          : \"Premium features unlocked! Redirecting...\"\n        }\n      </p>\n      {isRefreshing && retryCount > 0 && (\n        <p style={{ fontSize: \"14px\", color: \"#666\", marginTop: \"10px\" }}>\n          Checking status... ({retryCount}/{MAX_RETRIES})\n        </p>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;AAC5B;AACA;AACA;;;;;AAEe,SAAS;IACtB,MAAM,SAAS,IAAA,oJAAS;IACxB,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,+GAAQ,EAAC;IACjD,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,+GAAQ,EAAC;IAC7C,MAAM,cAAc;IAEpB,IAAA,gHAAS,EAAC;QACR,MAAM,yBAAyB;YAC7B,IAAI;gBACF,QAAQ,GAAG,CAAC,qCAAqC,aAAa;gBAE9D,mDAAmD;gBACnD,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,0IAAQ,CAAC,IAAI,CAAC,cAAc;gBAEvE,IAAI,OAAO;oBACT,QAAQ,KAAK,CAAC,6BAA6B;oBAC3C,MAAM;gBACR;gBAEA,QAAQ,GAAG,CAAC,sBAAsB,SAAS,MAAM;gBAEjD,qCAAqC;gBACrC,MAAM,YAAY,SAAS,MAAM,eAAe;gBAEhD,IAAI,WAAW;oBACb,QAAQ,GAAG,CAAC;oBACZ,gBAAgB;oBAEhB,mDAAmD;oBACnD,WAAW;wBACT,OAAO,IAAI,CAAC;oBACd,GAAG;gBACL,OAAO;oBACL,QAAQ,GAAG,CAAC;oBAEZ,6DAA6D;oBAC7D,IAAI,aAAa,aAAa;wBAC5B,WAAW;4BACT,cAAc,CAAA,OAAQ,OAAO;wBAC/B,GAAG;oBACL,OAAO;wBACL,QAAQ,GAAG,CAAC;wBACZ,gBAAgB;wBAChB,WAAW;4BACT,OAAO,IAAI,CAAC;wBACd,GAAG;oBACL;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,gBAAgB;gBAEhB,8BAA8B;gBAC9B,WAAW;oBACT,OAAO,IAAI,CAAC;gBACd,GAAG;YACL;QACF;QAEA;IACF,GAAG;QAAC;QAAQ;KAAW;IAEvB,qBACE,qKAAC;QAAI,OAAO;YACV,WAAW;YACX,SAAS;YACT,WAAW;YACX,SAAS;YACT,eAAe;YACf,gBAAgB;YAChB,YAAY;QACd;;0BACE,qKAAC;gBAAI,OAAO;oBAAE,UAAU;oBAAQ,cAAc;gBAAO;0BAClD,eAAe,OAAO;;;;;;0BAEzB,qKAAC;0BAAG;;;;;;0BACJ,qKAAC;0BACE,eACG,wCACA;;;;;;YAGL,gBAAgB,aAAa,mBAC5B,qKAAC;gBAAE,OAAO;oBAAE,UAAU;oBAAQ,OAAO;oBAAQ,WAAW;gBAAO;;oBAAG;oBAC3C;oBAAW;oBAAE;oBAAY;;;;;;;;;;;;;AAKxD","debugId":null}}]
}